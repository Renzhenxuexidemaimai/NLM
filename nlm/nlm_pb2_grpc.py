# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import nlm_pb2 as nlm__pb2


class NLMStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StrRecall = channel.unary_unary(
        '/nlm.NLM/StrRecall',
        request_serializer=nlm__pb2.RawString.SerializeToString,
        response_deserializer=nlm__pb2.GraphOutput.FromString,
        )
    self.NLURecall = channel.unary_unary(
        '/nlm.NLM/NLURecall',
        request_serializer=nlm__pb2.NLMInput.SerializeToString,
        response_deserializer=nlm__pb2.GraphOutput.FromString,
        )
    self.NodeRecall = channel.unary_unary(
        '/nlm.NLM/NodeRecall',
        request_serializer=nlm__pb2.GraphNode.SerializeToString,
        response_deserializer=nlm__pb2.GraphNode.FromString,
        )
    self.RelationRecall = channel.unary_unary(
        '/nlm.NLM/RelationRecall',
        request_serializer=nlm__pb2.GraphRelation.SerializeToString,
        response_deserializer=nlm__pb2.GraphRelation.FromString,
        )


class NLMServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StrRecall(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NLURecall(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NodeRecall(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RelationRecall(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NLMServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StrRecall': grpc.unary_unary_rpc_method_handler(
          servicer.StrRecall,
          request_deserializer=nlm__pb2.RawString.FromString,
          response_serializer=nlm__pb2.GraphOutput.SerializeToString,
      ),
      'NLURecall': grpc.unary_unary_rpc_method_handler(
          servicer.NLURecall,
          request_deserializer=nlm__pb2.NLMInput.FromString,
          response_serializer=nlm__pb2.GraphOutput.SerializeToString,
      ),
      'NodeRecall': grpc.unary_unary_rpc_method_handler(
          servicer.NodeRecall,
          request_deserializer=nlm__pb2.GraphNode.FromString,
          response_serializer=nlm__pb2.GraphNode.SerializeToString,
      ),
      'RelationRecall': grpc.unary_unary_rpc_method_handler(
          servicer.RelationRecall,
          request_deserializer=nlm__pb2.GraphRelation.FromString,
          response_serializer=nlm__pb2.GraphRelation.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nlm.NLM', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
